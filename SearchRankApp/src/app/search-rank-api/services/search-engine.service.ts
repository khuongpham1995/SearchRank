/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiBingSearchRankingGet } from '../fn/search-engine/api-bing-search-ranking-get';
import { ApiBingSearchRankingGet$Params } from '../fn/search-engine/api-bing-search-ranking-get';
import { apiGoogleSearchRankingGet } from '../fn/search-engine/api-google-search-ranking-get';
import { ApiGoogleSearchRankingGet$Params } from '../fn/search-engine/api-google-search-ranking-get';
import { SearchResponse as SearchRankPresentationResponsesSearchResponse } from '../models/SearchRank/Presentation/Responses/search-response';

@Injectable({ providedIn: 'root' })
export class SearchEngineService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiBingSearchRankingGet()` */
  static readonly ApiBingSearchRankingGetPath = '/api/bing/search-ranking';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiBingSearchRankingGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBingSearchRankingGet$Response(params: ApiBingSearchRankingGet$Params, context?: HttpContext): Observable<StrictHttpResponse<SearchRankPresentationResponsesSearchResponse>> {
    return apiBingSearchRankingGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiBingSearchRankingGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiBingSearchRankingGet(params: ApiBingSearchRankingGet$Params, context?: HttpContext): Observable<SearchRankPresentationResponsesSearchResponse> {
    return this.apiBingSearchRankingGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<SearchRankPresentationResponsesSearchResponse>): SearchRankPresentationResponsesSearchResponse => r.body)
    );
  }

  /** Path part for operation `apiGoogleSearchRankingGet()` */
  static readonly ApiGoogleSearchRankingGetPath = '/api/google/search-ranking';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiGoogleSearchRankingGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiGoogleSearchRankingGet$Response(params: ApiGoogleSearchRankingGet$Params, context?: HttpContext): Observable<StrictHttpResponse<SearchRankPresentationResponsesSearchResponse>> {
    return apiGoogleSearchRankingGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiGoogleSearchRankingGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiGoogleSearchRankingGet(params: ApiGoogleSearchRankingGet$Params, context?: HttpContext): Observable<SearchRankPresentationResponsesSearchResponse> {
    return this.apiGoogleSearchRankingGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<SearchRankPresentationResponsesSearchResponse>): SearchRankPresentationResponsesSearchResponse => r.body)
    );
  }

}
